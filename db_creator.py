import asyncio
import json

from src.extensions.DBWorkerExtension import DataBase


# consts TEST SERVER
# data_str = json.dumps(data)
# data = json.loads(data_str)
# A, H, P - –ø–æ—Å–ª–µ–¥–Ω–∏–µ
debug = 1
if debug == 1:
    smiles_channel = ['‚ûï', '‚óè']
    afk_channel_id = '1049384644669354014'
    parrent_channel_ids = {
        '1049377480273829940': 'RU:–°–ë:SB:1049375830108807239',
        '1049377837892771870': 'RU:–†–ë:RB:1049375910106759249',
        '1049377874018308127': 'RU:–ê–ë:AB:1049375990998118461',
        '1074319482350227576': 'RU:–ü–æ–ª–∏–≥–æ–Ω:DR:1049378707581718630', # –º–æ—Ä—Å–∫–∏–µ 
    }
    tech_ids = {
        '-': "‚ùå",
        '0': "üöô",
        '1': "‚úà",
        '2': "üö¢",
    }
    nation_ids = {
        '-': "‚ùå",
        '0': "ü¶Ö",
        '1': "‚öí",
        '2': "üç£",
    }
else:
    smiles_channel = ['‚ûï', '‚óè']
    afk_channel_id = '691184292830904399'
    parrent_channel_ids = {
        '1119276330253566042': 'RU:T:SB:1119287140585582723',
        '1119287140585582723': 'RU:A:SB:-',
        '1119276441952063518': 'RU:T:RB:1119276522000367676',
        '1119276522000367676': 'RU:A:RB:-',
        '1119276788422561802': 'RU:T:AB:1119276934061375608',
        '1119276934061375608': 'RU:A:AB:-',
        '1119277201704099860': 'RU:S:SH:1119277285531451564', # –º–æ—Ä—Å–∫–∏–µ 
        '1119277285531451564': 'RU:H:HE:-', # –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã
        '1119277359158276166': 'RU:P:PO:1119357957893799937', # –ø–æ–ª–∏–≥–æ–Ω
        '1119357957893799937': 'RU:O:OP:-', # –æ–±—â–∞–ª–∫–∞
        '1119363801561714830': 'EN:T:SB:1119363908415791174',
        '1119363908415791174': 'EN:A:SB:-',
        '1119364907868115065': 'EN:T:RB:1119364910753792201',
        '1119364910753792201': 'EN:A:RB:-',
        '1119366275265724577': 'EN:T:AB:1119366324745932810',
        '1119366324745932810': 'EN:A:AB:-',
        '1119366554337951744': 'EN:S:SH:1119366610738741269', # –º–æ—Ä—Å–∫–∏–µ 
        '1119366610738741269': 'EN:H:HE:-', # –≤–µ—Ä—Ç–æ–ª—ë—Ç—ã
        '0000000000000000000': 'EN:P:PO:0000000000000000000', # –ø–æ–ª–∏–≥–æ–Ω
        '0000000000000000000': 'EN:O:OP:-' # –æ–±—â–∞–ª–∫–∞
    }


async def main():
    db = DataBase("WarThunder.db")
    await db.connect()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.
    """
    parrentId - id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ...
    channelId - id –∫–∞–Ω–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ...
    creatorId - id –∞–¥–º–∏–Ω–∞ –∫–∞–Ω–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ...
    channelTime - –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è, –Ω–∏–≥–¥–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    messageId - id —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ 
    techId - id –Ω–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    nationId - id –Ω–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
    cmbrVar - float –±–æ–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    limitVar - int —á–∏—Å–ª–æ –ª–∏–º–∏—Ç–∞ –∫–∞–Ω–∞–ª–∞
    """
    await db.run_que(
        "CREATE TABLE VoiceCogChannels \
        (parrentId INTEGER, channelId INTEGER, \
        creatorId INTEGER, channelTime INTEGER, \
        messageId INTEGER, techId INTEGER, \
        nationId INTEGER, cmbrVar REAL, \
        limitVar INTEGER, commandTime INTEGER)"
    )

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    creatorId - id –∞–¥–º–∏–Ω–∞ –∫–∞–Ω–∞–ª–∞, –≤ –Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    techId - id –Ω–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    nationId - id –Ω–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
    cmbrVar - float –±–æ–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    limitVar - int —á–∏—Å–ª–æ –ª–∏–º–∏—Ç–∞ –∫–∞–Ω–∞–ª–∞
    """
    await db.run_que(
        "CREATE TABLE VoiceCogChannelsSaves \
        (creatorId INTEGER, techId INTEGER, nationId INTEGER, \
        cmbrVar REAL, limitVar INTEGER)"
    )

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    #  –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å, –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–µ–≤–µ—Ä–∞ TODO



    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç VoiceCog
    """
    constantName - –∏–º—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    constantValue - –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    """
    await db.run_que(
        "CREATE TABLE VoiceCogConstants \
        (constantName TEXT, constantValue TEXT)"
    )

    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –¥–ª—è VoiceCog
    await db.run_que(
        "INSERT INTO VoiceCogConstants (constantName, constantValue) VALUES (?, ?)",
        [
            ("smiles_channel", f"{json.dumps(smiles_channel)}"),
            ("afk_channel_id", f"{afk_channel_id}"),
            ("parrent_channel_ids", f"{json.dumps(parrent_channel_ids)}"),
            ("tech_ids", f"{json.dumps(tech_ids)}"),
            ("nation_ids", f"{json.dumps(nation_ids)}")
        ]
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã in VKResendCog
    await db.run_que("CREATE TABLE IF NOT EXISTS VKResendCog (valId INTEGER)")
    ids = [0000, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999]
    await db.run_que("INSERT INTO VKResendCog (valId) VALUES (?)", (json.dumps(ids),))
    

    
    await db.close()

if __name__ == "__main__":
    asyncio.run(main())
