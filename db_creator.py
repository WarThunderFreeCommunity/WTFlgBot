import asyncio
import json

from src.extensions.DBWorkerExtension import DataBase


# consts TEST SERVER
# data_str = json.dumps(data)
# data = json.loads(data_str)
# A, H, P - –ø–æ—Å–ª–µ–¥–Ω–∏–µ


smiles_channel = ['‚ûï', '‚óè']
afk_channel_id = '1049384644669354014'
parrent_channel_ids = {
    '1128735946288930940': 'RU:–°–ë:SB:1119274677274153090',
    '1128735907118338178': 'RU:–†–ë:RB:1119275461038575716',
    '1128735830270283976': 'RU:–ê–ë:AB:1119275516088815626',
    '1128735559062409398': 'RU:–ü–æ–ª–∏–≥–æ–Ω:DR:1119275995300638720',
    '1128739999450411140': 'EN:SB:SB:1119360770753441903',
    '1128739940423979009': 'EN:RB:RB:1119361141957738596',
    '1128739857779392552': 'EN:AB:AB:1119362343311245412',
    '1128739766351966229': 'EN:Polygon:DR:1119363204183773295',
}
tech_ids = {
    '-': "‚ùå",
    '0': "üöô",
    '1': "‚úà",
    '2': "üö¢",
}
nation_ids = {
    '-': "‚ùå",
    '0': "ü¶Ö",
    '1': "‚öí",
    '2': "üç£",
}



async def main():
    db = DataBase("WarThunder.db")
    await db.connect()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.
    """
    parrentId - id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ...
    channelId - id –∫–∞–Ω–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ...
    creatorId - id –∞–¥–º–∏–Ω–∞ –∫–∞–Ω–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ...
    channelTime - –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è, –Ω–∏–≥–¥–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    messageId - id —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ 
    techId - id –Ω–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    nationId - id –Ω–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
    cmbrVar - float –±–æ–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    limitVar - int —á–∏—Å–ª–æ –ª–∏–º–∏—Ç–∞ –∫–∞–Ω–∞–ª–∞
    """
    await db.run_que(
        "CREATE TABLE VoiceCogChannels \
        (parrentId INTEGER, channelId INTEGER, \
        creatorId INTEGER, channelTime INTEGER, \
        messageId INTEGER, techId INTEGER, \
        nationId INTEGER, cmbrVar REAL, \
        limitVar INTEGER, commandTime INTEGER)"
    )

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    creatorId - id –∞–¥–º–∏–Ω–∞ –∫–∞–Ω–∞–ª–∞, –≤ –Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    techId - id –Ω–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    nationId - id –Ω–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
    cmbrVar - float –±–æ–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    limitVar - int —á–∏—Å–ª–æ –ª–∏–º–∏—Ç–∞ –∫–∞–Ω–∞–ª–∞
    """
    await db.run_que(
        "CREATE TABLE VoiceCogChannelsSaves \
        (creatorId INTEGER, techId INTEGER, nationId INTEGER, \
        cmbrVar REAL, limitVar INTEGER)"
    )

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    #  –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å, –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–µ–≤–µ—Ä–∞ TODO



    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç VoiceCog
    """
    constantName - –∏–º—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    constantValue - –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    """
    await db.run_que(
        "CREATE TABLE VoiceCogConstants \
        (constantName TEXT, constantValue TEXT)"
    )

    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –¥–ª—è VoiceCog
    await db.run_que(
        "INSERT INTO VoiceCogConstants (constantName, constantValue) VALUES (?, ?)",
        [
            ("smiles_channel", f"{json.dumps(smiles_channel)}"),
            ("afk_channel_id", f"{afk_channel_id}"),
            ("parrent_channel_ids", f"{json.dumps(parrent_channel_ids)}"),
            ("tech_ids", f"{json.dumps(tech_ids)}"),
            ("nation_ids", f"{json.dumps(nation_ids)}")
        ]
    )
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã in VKResendCog
    await db.run_que("CREATE TABLE IF NOT EXISTS VKResendCog (valId INTEGER)")
    ids = [0000, 1111, 2222, 3333, 4444, 5555, 6666, 7777, 8888, 9999]
    await db.run_que("INSERT INTO VKResendCog (valId) VALUES (?)", (json.dumps(ids),))
    

    
    await db.close()

if __name__ == "__main__":
    asyncio.run(main())
